#-----------------------------------------------------------------------------
#
# event_study_reg_weights.R
#
# * This is code/functions for computing weights on underlying
#   an event study regression.
#
# * In order to run this code, one should first run a Callaway &
#   Sant'Anna att_gt function with a universal base period,
#   w/o covariates and using the "nevertreated" comparison group,
#   and have saved this in a variable called `cs_res`


# get the att_gt's
attgt_idx <- cs_res$group == g & cs_res$t == g+e
attgt <- cs_res$att[attgt_idx]
cs_dyn$att.egt[cs_dyn$egt==e]

get_attgt <- function(g,e) {
  attgt_idx <- cs_res$group == g & cs_res$t == g+e
  if( !(any(attgt_idx)) ) return(0)
  attgt <- cs_res$att[attgt_idx]
  attgt
}

p_g <- function(g) {
  mean(this_data$G==g)
}

tlist <- unique(this_data$year)
nT <- length(tlist)
he <- function(e,g,t) {
  ( 1*(g+e==t) - 1*( (g+e) %in% tlist )/nT) * (g != 0)
}
e.seq <- sort(unique(this_data$e[this_data$e != -1]))
hinner <- function(g,t) {
  sapply(e.seq, he, g=g,t=t)
}
h <- function(g,t) {
  hinner(g,t) - apply(sapply(glist, function(gg) hinner(gg,t)*p_g(gg)), 1, sum)
}

n <- length(unique(this_data$countyreal))
inner <- function(g,e,weightonly=FALSE) {
  part1 <- solve(t(ddotDit)%*%Dit/n)
  part2 <- as.matrix(h(g,g+e))*( (g+e) %in% tlist )*(g!=0)*p_g(g)
  if (!weightonly) part2 <- part2*get_attgt(g,e)
  part1 %*% part2
  #browser()
  #1+1
  ## # sa weights
  ## # this appears to work...
  ## data2$weight_outcome <- data2$ever_treated*(data2$e==e)*(data2$G==g)
  ## if(get_attgt(g,e)==0) return(as.matrix(rep(0, length(e.seq))))
  ## as.matrix(coef(feols( weight_outcome ~ i(e, ever_treated, ref=-1) | countyreal + year,
  ##               data=data2)))*get_attgt(g,e)
}

glist <- sort(unique(this_data$G))[-1]
coff <- function() {
  out <- matrix(data=0, nrow=length(e.seq))
  for (e in e.seq) {
    for (g in glist) {
      out <- out + inner(g,e)
      #for (t in tlist) {
      #  out <- out + inner(e,g,t)
      #}
    }
  }
  out
}
coff()
